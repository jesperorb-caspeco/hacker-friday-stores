{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","webpackCompilationHash":"a0eae6cbf73a5fa5eb6d","result":{"data":{"deck":{"id":"a357b125-cdc4-54dd-b877-208e92362bca","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsx mdx */\nvar theme = _objectSpread({}, nightOwl, {\n  colors: {\n    background: \"#011627\",\n    text: \"#fff\",\n    primary: \"hsl(33, 100%, 77%)\"\n  },\n  lineHeights: _objectSpread({}, nightOwl.lineHeights, {\n    body: 2\n  }),\n  styles: _objectSpread({}, nightOwl.styles, {\n    h2: _objectSpread({}, nightOwl.styles.h2, {\n      color: \"rgb(255,88,116)\"\n    }),\n    h3: _objectSpread({}, nightOwl.styles.h3, {\n      color: \"rgb(255,88,116)\"\n    }),\n    strong: {\n      color: \"primary\"\n    }\n  })\n});\n\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Minska boilerplate och underl\\xE4tta testning\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Flytta boilerplate? Separera concerns?\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Agenda\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createReducer\"), \" (redux toolkit)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createAction\"), \" (redux toolkit)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createStore\"), \" (custom)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msw\"), \": (testning)\")), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    style: {\n      color: 'hsl(220, 100%, 77%)'\n    }\n  }, \"Store\"), \": har hand om att lagra data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    style: {\n      color: 'hsl(33, 100%, 77%)'\n    }\n  }, \"Action\"), \": kallas p\\xE5 f\\xF6r att \\xE4ndra store state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    style: {\n      color: 'hsl(100, 100%, 77%)'\n    }\n  }, \"API\"), \": returnerar enbart data\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"new Create(thing);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"new Create(thing);\\n\\nclass Create extends Action {\\n  constructor(public thing: any) {\\n    super(false);\\n    this.doDispatch();\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Vad som typ h\\xE4nder\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Store \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"kanske\"), \" kallar p\\xE5 API vid action\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Store \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"kanske\"), \" kallar p\\xE5 olika endpoints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Store \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"kanske\"), \" sparar nytt state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Store \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"kanske\"), \" notifierar lyssnare\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API returnerar \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"oftast\"), \" inte data utan kallar p\\xE5 action\")), mdx(\"hr\", null), mdx(\"img\", {\n    src: \"https://media1.tenor.com/images/a7b9eca631101d2561401a61afa6e2df/tenor.gif?itemid=13573950\"\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Summering\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Man kan s\\xE4llan g\\xF6ra det ena utan att g\\xF6ra det andra\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Man kan aldrig veta vad som kommer att h\\xE4nda\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hur det funkar \\xE4r upp till implementeringen av varje enskild utvecklare\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Kan existerande verktyg f\\xF6rst\\xE4rka/v\\xE4gleda?\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Redux, state in, state out\\\" subtitle=\\\"reducer\\\"\",\n    \"title\": \"\\\"Redux,\",\n    \"state\": true,\n    \"in,\": true,\n    \"out\\\"\": true,\n    \"subtitle\": \"\\\"reducer\\\"\"\n  }), \"(previouState, action) => nextState\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Wallux (Wallebom Redux)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"ReduceStore\")), \" - kompabilitet med gamla stores (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"redux\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"connect\"), \" - koppla upp sig mot stores (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-redux\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Provider\"), \" - f\\xF6rse komponenter med store state (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-redux\"), \")\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Redux Toolkit\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The official, opinionated, batteries-included toolset\\nfor efficient Redux development\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TypeScript, korrekt upptypat redan\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createReducer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createAction\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export class LoadSuccess extends Action {\\n    static actionType: string = \\\"user_loadSuccess\\\";\\n    public users: List<User>;\\n    constructor(users: List<User>) {\\n        super(false);\\n        this.users = users;\\n        this.doDispatch();\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export class LoadSuccess extends Action {\\n    static actionType: string = \\\"user_loadSuccess\\\";\\n    public users: List<User>;\\n    constructor(users: List<User>) {\\n        super(false);\\n        this.users = users;\\n        this.doDispatch();\\n    }\\n}\\n\\nexport class Loading extends Action {\\n    static actionType: string = \\\"user_loading\\\";\\n    constructor() {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\\nexport class Create extends Action {\\n    static actionType: string = \\\"user_create\\\";\\n    constructor(public user: User) {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\\nexport class Delete extends Action {\\n    static actionType: string = \\\"user_delete\\\";\\n    constructor(public id: number) {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export const userLoadSuccess = \\\"user_loadSuccess\\\";\\nexport class LoadSuccess extends Action {\\n    static actionType: string = userLoadSuccess;\\n    readonly actionType = userLoadSuccess;\\n    public users: List<User>;\\n    constructor(users: List<User>) {\\n        super(false);\\n        this.users = users;\\n        this.doDispatch();\\n    }\\n}\\nexport const userLoading = \\\"user_loading\\\";\\nexport class Loading extends Action {\\n    static actionType: string = userLoading;\\n    readonly actionType = userLoading;\\n    constructor() {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\\nexport const userCreate = \\\"user_create\\\";\\nexport class Create extends Action {\\n    static actionType: string = userCreate;\\n    readonly actionType = userCreate;\\n    constructor(public user: User) {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\\nexport const userDelete = \\\"user_delete\\\";\\nexport class Delete extends Action {\\n    static actionType: string = userDelete;\\n    readonly actionType = userDelete;\\n    constructor(public id: number) {\\n        super(false);\\n        this.doDispatch();\\n    }\\n}\\n\\nexport type Actions = LoadSuccess | Loading | Create | Delete\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Med redux toolkits createAction\\\"\",\n    \"subtitle\": \"\\\"Med\",\n    \"redux\": true,\n    \"toolkits\": true,\n    \"createAction\\\"\": true\n  }), \"import { createAction } from \\\"@reduxjs/toolkit\\\";\\n\\nconst loadSuccess = createAction<List<User>>(\\\"user_loadSuccess\\\");\\nconst loading = createAction(\\\"user_loading\\\");\\nconst create = createAction<User>(\\\"user_create\\\");\\nconst remove = createAction<number>(\\\"user_remove\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"3[34:43],5[29:32],6[29:34] subtitle=\\\"Typad payload\\\"\",\n    \"3[34:43],5[29:32],6[29:34]\": true,\n    \"subtitle\": \"\\\"Typad\",\n    \"payload\\\"\": true\n  }), \"import { createAction } from \\\"@reduxjs/toolkit\\\";\\n\\nconst loadSuccess = createAction<List<User>>(\\\"user_loadSuccess\\\");\\nconst loading = createAction(\\\"user_loading\\\");\\nconst create = createAction<User>(\\\"user_create\\\");\\nconst remove = createAction<number>(\\\"user_remove\\\");\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"3[47:50],4[31:34],5[34:39],6[38:41] subtitle=\\\"Namespace\\\"\",\n    \"3[47:50],4[31:34],5[34:39],6[38:41]\": true,\n    \"subtitle\": \"\\\"Namespace\\\"\"\n  }), \"import { createAction } from \\\"@reduxjs/toolkit\\\";\\n\\nconst loadSuccess = createAction<List<User>>(\\\"user_loadSuccess\\\");\\nconst loading = createAction(\\\"user_loading\\\");\\nconst create = createAction<User>(\\\"user_create\\\");\\nconst remove = createAction<number>(\\\"user_remove\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { createReducer } from \\\"@reduxjs/toolkit\\\";\\nimport { create } from \\\"./actions\\\";\\n\\nconst userReducer = createReducer(\\n  initialState,\\n  (builder) => {\\n    builder.addCase(create, (state, action) => {\\n      state.users = state.users.push(action.payload);\\n    })\\n  }\\n)\\n\\nexport const userStore = new ReduceStore(userReducer);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"6:10 subtitle=\\\"Upptypat och klart\\\"\",\n    \"6:10\": true,\n    \"subtitle\": \"\\\"Upptypat\",\n    \"och\": true,\n    \"klart\\\"\": true\n  }), \"import { createReducer } from \\\"@reduxjs/toolkit\\\";\\nimport { create } from \\\"./actions\\\";\\n\\nconst userReducer = createReducer(\\n  initialState,\\n  (builder) => {\\n    builder.addCase(create, (state, action) => {\\n      state.users = state.users.push(action.payload);\\n    })\\n  }\\n)\\n\\nexport const userStore = new ReduceStore(userReducer);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"1[25:33],3:6\",\n    \"1[25:33],3:6\": true\n  }), \"import { createReducer, AnyAction } from \\\"@reduxjs/toolkit\\\";\\nimport { create } from \\\"./actions\\\";\\nimport { SomeOldActionClass } from \\\"./anywhere\\\";\\n\\nconst matcher = (action: AnyAction): action is AnyAction => {\\n  return action instanceof SomeOldActionClass;\\n}\\n\\nconst userReducer = createReducer(\\n  initialState,\\n  (builder) => {\\n    builder.addMatcher(matcher, () => {\\n        // Do something that matches\\n    })\\n  }\\n)\\n\\nexport const userStore = new ReduceStore(userReducer);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"4:6,11:15\",\n    \"4:6,11:15\": true\n  }), \"import { createReducer, AnyAction } from \\\"@reduxjs/toolkit\\\";\\nimport { create } from \\\"./actions\\\";\\nimport { SomeOldActionClass } from \\\"./anywhere\\\";\\n\\nconst matcher = (action: AnyAction): action is AnyAction => {\\n  return action instanceof SomeOldActionClass;\\n}\\n\\nconst userReducer = createReducer(\\n  initialState,\\n  (builder) => {\\n    builder.addMatcher(matcher, () => {\\n        // Do something that matches\\n    })\\n  }\\n)\\n\\nexport const userStore = new ReduceStore(userReducer);\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Har du n\\xE5gra exempel?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ReduceStore\"), \" anv\\xE4nds flitigt av bokning och tid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Redux ToolKit\"), \" finns p\\xE5 n\\xE5gra f\\xE5 st\\xE4llen\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Har du byggt en m\\xE4ngd halvt genomt\\xE4nkta abstraktioner?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BaseCrudApi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createStore\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createCrudReducer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createCrudActions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createCrudActionCreators\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createCrudMockServer\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=\\\"Mock Service Worker\\\" subtitle=\\\"Intercepts requests on the network level, not the application level.\\\"\",\n    \"title\": \"\\\"Mock\",\n    \"Service\": true,\n    \"Worker\\\"\": true,\n    \"subtitle\": \"\\\"Intercepts\",\n    \"requests\": true,\n    \"on\": true,\n    \"the\": true,\n    \"network\": true,\n    \"level,\": true,\n    \"not\": true,\n    \"application\": true,\n    \"level.\\\"\": true\n  }), \"const server = setupServer(\\n  rest.post('*/api/v1/user', (req, res, ctx) => {\\n    return res(ctx.json({ name: 'zero_cool'}))\\n  })\\n)\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"a357b125-cdc4-54dd-b877-208e92362bca","slug":"","title":"Minska boilerplate och underlätta testning"}}}